{"changed":true,"filter":false,"title":"#views.py#","tooltip":"/OnlineTimeRecorder/polls/#views.py#","value":"from django.contrib.auth import login\nfrom django.http import JsonResponse\nfrom django.shortcuts import render, redirect\nfrom django.urls import reverse\nfrom django.views.generic import FormView\nimport django\nfrom .forms import MyForm, LoginForm, UserForm, DemoUserForm\nfrom .models import User, DemoUser\n\ndef form_top(request):\n   return render(request, 'form_top/form_top.html', {\n      'form': form_save,\n   }) \n\n\nclass FormUserLogin(FormView):\n   \"\"\"\n   ログイン\n   \"\"\"\n   template_name = 'form_user_login/form_user_login.html'\n   form_class = LoginForm\n   \n   def form_valid(self, form):\n      login(self.request, form.get_user())\n      return super().form_valid(form)\n\n   def get_success_url(self):\n      if self.request.user.secret:\n         return reverse('form_secret')\n      elif self.request.user.master:\n         return reverse('form_user')\n      else:\n         return reverse('form_time')\n\nclass FormUser(FormView):\n   \"\"\"\n   マスター\n   \"\"\"\n   template_name = 'form_user/form_user.html'\n   form_class = UserForm\n   success_url = '.'\n\n   def form_valid(self, form):\n      phone = form.cleaned_data['phone']\n      password = form.cleaned_data['password']\n      name_sei = form.cleaned_data['name_sei']\n      name_namae = form.cleaned_data['name_namae']\n      User.objects.create_user(phone, password, name_sei, name_namae)\n      return super().form_valid(form)\n\n   def get_context_data(self, **kwargs):\n      context = super().get_context_data(**kwargs)\n      context['user_list'] = User.objects.all().order_by('id')\n      return context\n\ndef del_user(request):\n   id = request.GET.get('id')\n   if id:\n      User.objects.get(pk=id).delete()\n   return JsonResponse({})\n\nclass FormSecret(FormView):\n   \"\"\"\n   シークレット\n   \"\"\"\n   template_name = 'form_secret/form_secret.html'\n   form_class = DemoUserForm\n   success_url = '.'\n\n   def form_valid(self, form):\n      phone = form.cleaned_data['phone']\n      \n      return super().form_valid(form)\n\n   def get_context_data(self, **kwargs):\n      context = super().get_context_data(**kwargs)\n      context['user_list'] = DemoUser.objects.all().order_by('id')\n      return context\n   \n   \nimport datetime \ndef form_time_login_function(request):\n   return render(request, 'form_time_login/form_time_login.html', {\n       'current_date': (datetime.datetime.today() +  datetime.timedelta(hours=9)).strftime('%Y年%m月%d日')\n   })\n\nimport datetime\ndef form_user(request):\n   return render(request, 'form_user/form_user.html', {\n       'current_date': (datetime.datetime.today() +  datetime.timedelta(hours=9)).strftime('%Y年%m月%d日')\n   })\n   \nimport datetime\ndef form_time(request):\n   return render(request, 'form_time/form_time.html', {\n      'current_date': (datetime.datetime.today() +  datetime.timedelta(hours=9)).strftime('%Y年%m月%d日'),\n      'current_time': (datetime.datetime.today() +  datetime.timedelta(hours=9)).strftime('%H:%M')\n   })\n\ndef form_user_save(request):\n   request_dictonary = dict(request.POST)\n   print(request_dictonary) \n   return redirect('form_user')\n   \ndef search(request):\n   phone_number = dict(request.GET)['query'][0]\n   result_list = []\n   # for row in SyainData.objects.filter(phone=phone_number):\n   #    result_list.append(row)\n   return render(request, 'polls/form.html', {\n      'message': u'検索結果は{}件です'.format(len(result_list)),\n      'form': MyForm(),\n      'search_result': result_list\n   })\n   \ndef form_save(request):\n   fmrm = MyForm(request.POST)\n   if form.is_valid():\n      ret_dict = dict(request.POST)\n      # syain = SyainData(\n      #       phone=ret_dict['phone'][0],\n      #       date=ret_dict['date'][0],\n      #       password=ret_dict['password'][0],\n      #       name=ret_dict['name'][0],\n      #       job_start=ret_dict['job_start'][0],\n      #       job_end=ret_dict['job_end'][0],\n      #       status=ret_dict['status'][0],\n      # )\n      # syain.save()\n      message = u'登録が完了しました'\n   else:\n      message = u'登録に失敗しました'\n   return render(request, 'polls/form.html', {\n      'message': message,\n      'form': MyForm(),\n   }) \n   \n   \n#   <button type='submit' name='action' value='send'>\n   \n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":70,"column":6},"end":{"row":71,"column":6},"action":"insert","lines":["phone = form.cleaned_data['phone']","      "],"id":2}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":9,"state":"start","mode":"ace/mode/text"}},"timestamp":1529583294538}